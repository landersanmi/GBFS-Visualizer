# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class GbfsSystemInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gbfs_system_id=None, url=None, name=None, operator=None, company_url=None, phone_number=None, email=None, timezone=None, license_url=None):  # noqa: E501
        """GbfsSystemInformation - a model defined in OpenAPI

        :param gbfs_system_id: The gbfs_system_id of this GbfsSystemInformation.  # noqa: E501
        :type gbfs_system_id: str
        :param url: The url of this GbfsSystemInformation.  # noqa: E501
        :type url: str
        :param name: The name of this GbfsSystemInformation.  # noqa: E501
        :type name: str
        :param operator: The operator of this GbfsSystemInformation.  # noqa: E501
        :type operator: str
        :param company_url: The company_url of this GbfsSystemInformation.  # noqa: E501
        :type company_url: str
        :param phone_number: The phone_number of this GbfsSystemInformation.  # noqa: E501
        :type phone_number: str
        :param email: The email of this GbfsSystemInformation.  # noqa: E501
        :type email: str
        :param timezone: The timezone of this GbfsSystemInformation.  # noqa: E501
        :type timezone: str
        :param license_url: The license_url of this GbfsSystemInformation.  # noqa: E501
        :type license_url: str
        """
        self.openapi_types = {
            'gbfs_system_id': str,
            'url': str,
            'name': str,
            'operator': str,
            'company_url': str,
            'phone_number': str,
            'email': str,
            'timezone': str,
            'license_url': str
        }

        self.attribute_map = {
            'gbfs_system_id': 'gbfs_system_id',
            'url': 'url',
            'name': 'name',
            'operator': 'operator',
            'company_url': 'company_url',
            'phone_number': 'phone_number',
            'email': 'email',
            'timezone': 'timezone',
            'license_url': 'license_url'
        }

        self._gbfs_system_id = gbfs_system_id
        self._url = url
        self._name = name
        self._operator = operator
        self._company_url = company_url
        self._phone_number = phone_number
        self._email = email
        self._timezone = timezone
        self._license_url = license_url

    @classmethod
    def from_dict(cls, dikt) -> 'GbfsSystemInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The gbfs_system_information of this GbfsSystemInformation.  # noqa: E501
        :rtype: GbfsSystemInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gbfs_system_id(self):
        """Gets the gbfs_system_id of this GbfsSystemInformation.


        :return: The gbfs_system_id of this GbfsSystemInformation.
        :rtype: str
        """
        return self._gbfs_system_id

    @gbfs_system_id.setter
    def gbfs_system_id(self, gbfs_system_id):
        """Sets the gbfs_system_id of this GbfsSystemInformation.


        :param gbfs_system_id: The gbfs_system_id of this GbfsSystemInformation.
        :type gbfs_system_id: str
        """

        self._gbfs_system_id = gbfs_system_id

    @property
    def url(self):
        """Gets the url of this GbfsSystemInformation.

        URL to the system_information.json file of the GBFS System, containing all the information related with the correspondent company  # noqa: E501

        :return: The url of this GbfsSystemInformation.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this GbfsSystemInformation.

        URL to the system_information.json file of the GBFS System, containing all the information related with the correspondent company  # noqa: E501

        :param url: The url of this GbfsSystemInformation.
        :type url: str
        """

        self._url = url

    @property
    def name(self):
        """Gets the name of this GbfsSystemInformation.

        Name of the company  # noqa: E501

        :return: The name of this GbfsSystemInformation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GbfsSystemInformation.

        Name of the company  # noqa: E501

        :param name: The name of this GbfsSystemInformation.
        :type name: str
        """

        self._name = name

    @property
    def operator(self):
        """Gets the operator of this GbfsSystemInformation.

        Operator of the company  # noqa: E501

        :return: The operator of this GbfsSystemInformation.
        :rtype: str
        """
        return self._operator

    @operator.setter
    def operator(self, operator):
        """Sets the operator of this GbfsSystemInformation.

        Operator of the company  # noqa: E501

        :param operator: The operator of this GbfsSystemInformation.
        :type operator: str
        """

        self._operator = operator

    @property
    def company_url(self):
        """Gets the company_url of this GbfsSystemInformation.

        URL to the company homepage  # noqa: E501

        :return: The company_url of this GbfsSystemInformation.
        :rtype: str
        """
        return self._company_url

    @company_url.setter
    def company_url(self, company_url):
        """Sets the company_url of this GbfsSystemInformation.

        URL to the company homepage  # noqa: E501

        :param company_url: The company_url of this GbfsSystemInformation.
        :type company_url: str
        """

        self._company_url = company_url

    @property
    def phone_number(self):
        """Gets the phone_number of this GbfsSystemInformation.

        Phone of the company  # noqa: E501

        :return: The phone_number of this GbfsSystemInformation.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this GbfsSystemInformation.

        Phone of the company  # noqa: E501

        :param phone_number: The phone_number of this GbfsSystemInformation.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def email(self):
        """Gets the email of this GbfsSystemInformation.

        Email of the company  # noqa: E501

        :return: The email of this GbfsSystemInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GbfsSystemInformation.

        Email of the company  # noqa: E501

        :param email: The email of this GbfsSystemInformation.
        :type email: str
        """

        self._email = email

    @property
    def timezone(self):
        """Gets the timezone of this GbfsSystemInformation.

        Timezone of the company  # noqa: E501

        :return: The timezone of this GbfsSystemInformation.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this GbfsSystemInformation.

        Timezone of the company  # noqa: E501

        :param timezone: The timezone of this GbfsSystemInformation.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def license_url(self):
        """Gets the license_url of this GbfsSystemInformation.

        URL to the company license  # noqa: E501

        :return: The license_url of this GbfsSystemInformation.
        :rtype: str
        """
        return self._license_url

    @license_url.setter
    def license_url(self, license_url):
        """Sets the license_url of this GbfsSystemInformation.

        URL to the company license  # noqa: E501

        :param license_url: The license_url of this GbfsSystemInformation.
        :type license_url: str
        """

        self._license_url = license_url
